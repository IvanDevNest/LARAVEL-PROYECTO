import {
  __commonJS
} from "./chunk-F4AF7QOS.js";

// node_modules/validatorjs/src/lang/ca.js
var require_ca = __commonJS({
  "node_modules/validatorjs/src/lang/ca.js"(exports, module) {
    module.exports = {
      accepted: "El camp :attribute pot ser aceptat.",
      after: "El camp :attribute pot ser una data posterior a :after.",
      alpha: "El camp :attribute nom\xE9s pot contenir lletras.",
      alpha_dash: "El camp :attribute nom\xE9s pot contenir lletras, nombres y guions.",
      alpha_num: "El camp :attribute nom\xE9s pot contenir lletras y nombres.",
      attributes: {},
      between: "El camp :attribute t\xE9 que estar entre :min - :max.",
      confirmed: "La confirmaci\xF3 de :attribute no coincideix.",
      different: "El camp :attribute y :other poden ser diferents.",
      digits: "El camp :attribute pot tindre :digits d\xEDgitos.",
      digits_between: "El camp  :attribute ha de tenir entre :min i :max d\xEDgits.",
      email: "El camp :attribute no es un correu v\xE1lido.",
      "in": "El camp :attribute es inv\xE0lid.",
      integer: "El camp :attribute pot ser un nombre enter.",
      hex: "El camp :attribute hauria de tenir format hexadecimal",
      max: {
        numeric: "El camp :attribute no pot ser mayor a :max.",
        string: "El camp :attribute no pot ser mayor que :max car\xE0cters."
      },
      min: {
        numeric: "La mida del camp :attribute pot ser de al menys :min.",
        string: "El camp :attribute pot contenir al menys :min car\xE0cters."
      },
      not_in: "El camp :attribute es inv\xE0lid.",
      numeric: "El camp :attribute pot ser num\xE9ric.",
      present: "El camp de :attribute pot estar present (per\xF2 pot estar buit).",
      regex: "El format del camp :attribute es inv\xE0lid.",
      required: "El camp :attribute es obligatori.",
      required_if: "El camp :attribute es obligatori quan :other es :value.",
      same: "El camp :attribute y :other poden coincidir.",
      size: {
        numeric: "La mida del camp :attribute pot ser :size.",
        string: "El camp :attribute pot contenir :size car\xE0cters."
      },
      url: "El format de :attribute es inv\xE0lid."
    };
  }
});
export default require_ca();
//# sourceMappingURL=validatorjs_src_lang_ca.js.map
